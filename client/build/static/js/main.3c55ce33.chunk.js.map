{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","src","brain","alt","ImageLinkForm","onInputChange","onPicSubmit","type","onChange","Rank","name","entries","FaceRecognition","imgUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","e","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","res","json","user","loadUser","this","htmlFor","Component","Register","onNameChange","registerName","registerEmail","registerPassword","onSubmitRegister","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","Date","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.3c55ce33.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signout\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign In\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange(\"register\")}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport brain from \"./brain.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ max: 55 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3 \">\r\n          {\" \"}\r\n          <img style={{ paddingTop: \"5px\" }} src={brain} alt=\"logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onPicSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        {\"This magic Brain will detect faces in your pictures. Give it a try!\"}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"form center pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 npa2 w-70 center\"\r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"w-30 grow link ph3 pv2 dib white bg-light-purple\"\r\n            onClick={onPicSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"white f3\">{`${name}, your current entry count is`}</div>\r\n\r\n      <div className=\"white f1\">{entries}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imgUrl, box }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img id=\"imageInput\" alt=\"\" src={imgUrl} width=\"500px\" height=\"auto\" />\r\n        <div\r\n          className=\"bounding-box\"\r\n          style={{\r\n            top: box.topRow,\r\n            right: box.rightCol,\r\n            bottom: box.bottomRow,\r\n            left: box.leftCol,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailChange = (e) => {\r\n    this.setState({ signInEmail: e.target.value });\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({ signInPassword: e.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"http://localhost:3000/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  onChange={this.onEmailChange}\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  onChange={this.onPasswordChange}\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                onClick={() => onRouteChange(\"register\")}\r\n                className=\"f6 link dim black db pointer\"\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      registerName: \"\",\r\n      registerEmail: \"\",\r\n      registerPassword: \"\",\r\n    };\r\n  }\r\n\r\n  onNameChange = (e) => {\r\n    this.setState({ registerName: e.target.value });\r\n  };\r\n\r\n  onEmailChange = (e) => {\r\n    this.setState({ registerEmail: e.target.value });\r\n  };\r\n\r\n  onPasswordChange = (e) => {\r\n    this.setState({ registerPassword: e.target.value });\r\n  };\r\n\r\n  onSubmitRegister = () => {\r\n    fetch(\"http://localhost:3000/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: this.state.registerName,\r\n        email: this.state.registerEmail,\r\n        password: this.state.registerPassword,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  onChange={this.onNameChange}\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  onChange={this.onEmailChange}\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  onChange={this.onPasswordChange}\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitRegister}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\n\nimport Particles from \"react-particles-js\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nconst initialState = {\n  input: \"\",\n  imgUrl: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: \"0\",\n    joined: new Date(),\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/\")\n      .then((res) => res.json())\n      .then(console.log);\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"imageInput\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (e) => {\n    this.setState({ input: e.target.value });\n  };\n\n  onPicSubmit = () => {\n    this.setState({ imgUrl: this.state.input });\n    fetch(\"http://localhost:3000/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((res) => res.json())\n            .then((count) => {\n              this.setState(\n                Object.assign(this.state.user, {\n                  entries: count,\n                })\n              );\n            });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(res));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imgUrl, route, box } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onPicSubmit={this.onPicSubmit}\n            />\n            <FaceRecognition box={box} imgUrl={imgUrl} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.3235734c.png\";"],"sourceRoot":""}